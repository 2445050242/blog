(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{524:function(s,e,n){"use strict";n.r(e);var a=n(4),t=Object(a.a)({},(function(){var s=this,e=s.$createElement,n=s._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("ul",[n("li",[n("h4",{attrs:{id:"数据的管理和传递state、props"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数据的管理和传递state、props"}},[s._v("#")]),s._v(" 数据的管理和传递state、props")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("数据的变动最好放在最上层组件，然后通过数据props数据传递到下流组件")])]),s._v(" "),n("li",[n("p",[s._v("不要直接修改state")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// 错误\nthis.state.comment = 'Hello';\n/ 正确\nthis.setState({comment: 'Hello'});\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])])]),s._v(" "),n("li",[n("p",[s._v("因为 this.props 和 this.state 可能是异步更新的，你不能依赖他们的值计算下一个state(状态),要弥补这个问题，使用另一种 setState() 的形式，它接受一个函数而不是一个对象。这个函数将接收前一个状态作为第一个参数，应用更新时的 props 作为第二个参数")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// 错误\nthis.setState({\n  counter: this.state.counter + this.props.increment,\n});\n// 正确\nthis.setState((prevState, props) => ({\n  counter: prevState.counter + props.increment\n}));\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])])]),s._v(" "),n("li",[n("p",[s._v("Props 是只读的")])])])]),s._v(" "),n("li",[n("h4",{attrs:{id:"事件处理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#事件处理"}},[s._v("#")]),s._v(" 事件处理")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("在 React 中你不能通过返回 false 来阻止默认行为。必须明确调用 preventDefault")])]),s._v(" "),n("li",[n("p",[s._v("一般情况下，如果你引用一个后面没跟 () 的方法，例如 onClick={this.handleClick} ，那你就应该 绑定(bind) 该方法。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("constructor(props) {\n    super(props);\n    this.state = {isToggleOn: true};\n    \n    // 这个绑定是必要的，使`this`在回调中起作用\n    this.handleClick = this.handleClick.bind(this);\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])])])])]),s._v(" "),n("li",[n("h4",{attrs:{id:"渲染"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#渲染"}},[s._v("#")]),s._v(" 渲染")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("条件渲染，在 JavaScript 中， true && expression 总是会评估为 expression ，而 false && expression 总是执行为 false ，确保 && 之前的表达式总是布尔值")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("{unreadMessages.length > 0 &&\n    <h2>\n      You have {unreadMessages.length} unread messages.\n    </h2>\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])])]),s._v(" "),n("li",[n("p",[s._v("列表渲染，需要声明key的值为唯一值，否则会警告")])])])]),s._v(" "),n("li",[n("h4",{attrs:{id:"生命周期"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#生命周期"}},[s._v("#")]),s._v(" 生命周期")]),s._v(" "),n("ul",[n("li",[s._v("componentWillMount：挂载之前")]),s._v(" "),n("li",[s._v("componentDidMount：挂载之后")]),s._v(" "),n("li",[s._v("componentWillUnmount 卸载")]),s._v(" "),n("li",[s._v("shouldComponentUpdate(nextProps, nextState)：你可以通过这个方法控制组件是否重新渲染。如果返回 false 组件就不会重新渲染。这个生命周期在 React.js 性能优化上非常有用。")]),s._v(" "),n("li",[s._v("componentWillReceiveProps(nextProps)：组件从父组件接收到新的 props 之前调用。")]),s._v(" "),n("li",[s._v("componentWillUpdate()：组件开始重新渲染之前调用。")]),s._v(" "),n("li",[s._v("componentDidUpdate()：组件重新渲染并且把更改变更到真实的 DOM 以后调用。")])])]),s._v(" "),n("li",[n("h4",{attrs:{id:"高级"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#高级"}},[s._v("#")]),s._v(" 高级")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("用户定义组件必须以大写字母开头，React 误认为小写是一个 HTML 标签，因为它首字母不是大写的")])]),s._v(" "),n("li",[n("p",[s._v("使用 PropTypes 进行类型检查")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("import PropTypes from 'prop-types';\n\nclass Greeting extends React.Component {\n  render() {\n    return (\n      <h1>Hello, {this.props.name}</h1>\n    );\n  }\n}\n\nGreeting.propTypes = {\n  name: PropTypes.string\n};\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])])])])]),s._v(" "),n("li",[n("h4",{attrs:{id:"其他"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[s._v("#")]),s._v(" 其他")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("一个常用的技巧是单一职责原则，即一个组件理想情况下只处理一件事。")])]),s._v(" "),n("li",[n("p",[s._v("http://huziketang.com/books/react/")])]),s._v(" "),n("li",[n("p",[s._v("组件的 render 方法必须要用一个外层元素把内容进行包裹")])]),s._v(" "),n("li",[n("p",[s._v("因为 class 是 JavaScript 的关键字,所以 React.js 中定义了一种新的方式：className 来帮助我们给元素添加类名")])]),s._v(" "),n("li",[n("p",[s._v("因为 for 也是 JavaScript 的关键字，所以在 JSX 用 htmlFor 替代")])]),s._v(" "),n("li",[n("p",[s._v("这些 on* 的事件监听只能用在普通的 HTML 的标签上，而不能用在组件标签上。")])]),s._v(" "),n("li",[n("p",[s._v("当你调用 setState 的时候，React.js 并不会马上修改 state。而是把这个对象放到一个更新队列里面，稍后才会从队列当中把新的状态提取出来合并到 state 当中，然后再触发组件更新。")])]),s._v(" "),n("li",[n("p",[s._v("React.js 提供了一个属性 dangerouslySetInnerHTML，可以让我们设置动态设置元素的 innerHTML")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("render () {\n    return (\n      <div\n        className='editor-wrapper'\n        dangerouslySetInnerHTML={{__html: '<h1>React.js 小书</h1>'}} />\n    )\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])])])])]),s._v(" "),n("li",[n("h4",{attrs:{id:"taro注意点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#taro注意点"}},[s._v("#")]),s._v(" Taro注意点")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("配置别名")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("\x3c!--config/index.js--\x3e\nalias: {\n  '@/components': path.resolve(__dirname, '..', 'src/components'),\n  '@/utils': path.resolve(__dirname, '..', 'src/utils'),\n  '@/package': path.resolve(__dirname, '..', 'package.json'),\n  '@/project': path.resolve(__dirname, '..', 'project.config.json'),\n}\n\n\x3c!--tsconfig.json--\x3e\n{\n  \"compilerOptions\": {\n    \"baseUrl\": \".\",\n    \"paths\": {\n      \"@/components/*\": [\"./src/components/*\"],\n      \"@/utils/*\": [\"./src/utils/*\"],\n      \"@/package\": [\"./package.json\"],\n      \"@/project\": [\"./project.config.json\"],\n    }\n  }\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br")])])]),s._v(" "),n("li",[n("p",[s._v("使用小程序原生第三方组件和插件")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("\x3c!--首先需要将第三方组件库下载到项目的 src 目录下，随后在页面或者组件里通过配置 usingComponents 指定需要引用的第三方组件即可，组件调用的时候需要按照 JSX 的使用规范来进行传参和事件绑定。--\x3e\n\x3c!--usingComponents 指定的第三方组件名字需要以小写开头。--\x3e\n\nconfig = {\n    \x3c!--定义需要引入的第三方组件--\x3e\n    usingComponents: {\n      'ec-canvas': '../../components/ec-canvas/ec-canvas' // 书写第三方组件的相对路径\n    }\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])])]),s._v(" "),n("li",[n("p",[s._v("滚动区域")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("微信小程序 中 ScrollView 组件如果设置 scrollX 横向滚动时，并且子元素为多个时（单个子元素时设置固定宽度则可以正常横向滚动），需要通过 WXSS 设置 white-space 为 nowrap 来保证元素不换行，并对 ScrollView 内部元素设置 display 为 inline-block 来使其能够横向滚动。\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])])])])])]),s._v(" "),n("h3",{attrs:{id:"_8-15-学习文档"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_8-15-学习文档"}},[s._v("#")]),s._v(" 8.15 学习文档")]),s._v(" "),n("ul",[n("li",[s._v("引入新的生命周期componentDidCatch(error, info)用于错误边界")]),s._v(" "),n("li",[s._v("使用<React.Fragment>片段来包住多个子节点")]),s._v(" "),n("li",[s._v("避免重新如渲染可以调用shouldComponentUpdate()通过返回true或者false来控制是否重新渲染，优化性能")]),s._v(" "),n("li",[s._v("return Object.assign({}, colormap, {right: 'blue'});或者return {...colormap, right: 'blue'};防止对象突变")]),s._v(" "),n("li",[s._v("ReactDOM.createPortal(child, container)将子节点渲染到父组件 DOM 层次结构之外的 DOM 节点。")]),s._v(" "),n("li",[s._v("this.myRef = React.createRef();绑定ref来操作DOM，使用this.myRef.current获取当前元素")]),s._v(" "),n("li",[s._v("{this.props.render(this.state)}渲染属性")]),s._v(" "),n("li",[s._v("使用dangerouslySetInnerHTML 并通过 __html 键传递一个对象直接从 React 设置 HTML")])])])}),[],!1,null,null,null);e.default=t.exports}}]);