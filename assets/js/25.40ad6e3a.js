(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{526:function(n,s,a){"use strict";a.r(s);var e=a(4),t=Object(e.a)({},(function(){var n=this,s=n.$createElement,a=n._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("ul",[a("li",[a("p",[n._v("单例模式：")]),n._v(" "),a("ul",[a("li",[a("p",[n._v("定义：保证一个类仅有一个实例，并提供一个访问它的全局访问点。实现的方法为先判断实例存在与否，如果存在则直接返回，如果不存在就创建了再返回，这就确保了一个类只有一个实例对象")])]),n._v(" "),a("li",[a("p",[n._v("适用场景：一个单一对象。比如：弹窗，无论点击多少次，弹窗只应该被创建一次")])]),n._v(" "),a("li",[a("p",[n._v("示例")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('class CreateUser {\n    constructor(name) {\n        this.name = name;\n        this.getName();\n    }\n    getName() {\n         return this.name;\n    }\n}\n// 代理实现单例模式\nvar ProxyMode = (function() {\n    var instance = null;\n    return function(name) {\n        if(!instance) {\n            instance = new CreateUser(name);\n        }\n        return instance;\n    }\n})();\n// 测试单体模式的实例\nvar a = ProxyMode("aaa");\nvar b = ProxyMode("bbb");\n// 因为单体模式是只实例化一次，所以下面的实例是相等的\nconsole.log(a === b);    //true\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br")])])])])]),n._v(" "),a("li",[a("p",[n._v("策略模式：")]),n._v(" "),a("ul",[a("li",[a("p",[n._v("定义：定义一系列的算法，把他们一个个封装起来，并且使他们可以相互替换,策略模式的目的就是将算法的使用算法的实现分离开来")])]),n._v(" "),a("li",[a("p",[n._v("要求：一个基于策略模式的程序至少由两部分组成。第一个部分是一组策略类（可变），策略类封装了具体的算法，并负责具体的计算过程。第二个部分是环境类Context（不变），Context接受客户的请求，随后将请求委托给某一个策略类。要做到这一点，说明Context中要维持对某个策略对象的引用")])]),n._v(" "),a("li",[a("p",[n._v("示例")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('/*策略类*/\nvar levelOBJ = {\n    "A": function(money) {\n        return money * 4;\n    },\n    "B" : function(money) {\n        return money * 3;\n    },\n    "C" : function(money) {\n        return money * 2;\n    } \n};\n/*环境类*/\nvar calculateBouns =function(level,money) {\n    return levelOBJ[level](money);\n};\nconsole.log(calculateBouns(\'A\',10000)); // 40000\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br")])])])])]),n._v(" "),a("li",[a("p",[n._v("代理模式：")]),n._v(" "),a("ul",[a("li",[a("p",[n._v("定义：为一个对象提供一个代用品或占位符，以便控制对它的访问")])]),n._v(" "),a("li",[a("p",[n._v("适用场景：某一个花销很大的操作，可以通过虚拟代理的方式延迟到这种需要它的时候才去创建（例：使用虚拟代理实现图片懒加载）")])]),n._v(" "),a("li",[a("p",[n._v("示例")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("var imgFunc = (function() {\n    var imgNode = document.createElement('img');\n    document.body.appendChild(imgNode);\n    return {\n        setSrc: function(src) {\n            imgNode.src = src;\n        }\n    }\n})();\nvar proxyImage = (function() {\n    var img = new Image();\n    img.onload = function() {\n        imgFunc.setSrc(this.src);\n    }\n    return {\n        setSrc: function(src) {\n            imgFunc.setSrc('./loading,gif');\n            img.src = src;\n        }\n    }\n})();\nproxyImage.setSrc('./pic.png');\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br")])])])])]),n._v(" "),a("li",[a("p",[n._v("中介者模式：")]),n._v(" "),a("ul",[a("li",[a("p",[n._v("定义：通过一个中介者对象，其他所有的相关对象都通过该中介者对象来通信，而不是相互引用，当其中的一个对象发生改变时，只需要通知中介者对象即可。通过中介者模式可以解除对象与对象之间的紧耦合关系")])]),n._v(" "),a("li",[a("p",[n._v("适用场景：例如购物车需求，存在商品选择表单、颜色选择表单、购买数量表单等等，都会触发change事件，那么可以通过中介者来转发处理这些事件，实现各个事件间的解耦，仅仅维护中介者对象即可")])]),n._v(" "),a("li",[a("p",[n._v("示例")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("var goods = {   //手机库存\n    'red|32G': 3,\n    'red|64G': 1,\n    'blue|32G': 7,\n    'blue|32G': 6,\n};\n//中介者\nvar mediator = (function() {\n    var colorSelect = document.getElementById('colorSelect');\n    var memorySelect = document.getElementById('memorySelect');\n    var numSelect = document.getElementById('numSelect');\n    return {\n        changed: function(obj) {\n            switch(obj){\n                case colorSelect:\n                    //TODO\n                    break;\n                case memorySelect:\n                    //TODO\n                    break;\n                case numSelect:\n                    //TODO\n                    break;\n            }\n        }\n    }\n})();\ncolorSelect.onchange = function() {\n    mediator.changed(this);\n};\nmemorySelect.onchange = function() {\n    mediator.changed(this);\n};\nnumSelect.onchange = function() {\n    mediator.changed(this);\n};\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br")])])])])]),n._v(" "),a("li",[a("p",[n._v("装饰者模式：")]),n._v(" "),a("ul",[a("li",[a("p",[n._v("定义：在不改变对象自身的基础上，在程序运行期间给对象动态地添加方法")])]),n._v(" "),a("li",[a("p",[n._v("适用场景：原有方法维持不变，在原有方法上再挂载其他方法来满足现有需求；函数的解耦，将函数拆分成多个可复用的函数，再将拆分出来的函数挂载到某个函数上，实现相同的效果但增强了复用性")])]),n._v(" "),a("li",[a("p",[n._v("示例")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("Function.prototype.before = function(beforefn) {\n    var self = this;    //保存原函数引用\n    return function(){  //返回包含了原函数和新函数的 '代理函数'\n        beforefn.apply(this, arguments);    //执行新函数，修正this\n        return self.apply(this,arguments);  //执行原函数\n    }\n}\nFunction.prototype.after = function(afterfn) {\n    var self = this;\n    return function(){\n        var ret = self.apply(this,arguments);\n        afterfn.apply(this, arguments);\n        return ret;\n    }\n}\nvar func = function() {\n    console.log('2');\n}\n//func1和func3为挂载函数\nvar func1 = function() {\n    console.log('1');\n}\nvar func3 = function() {\n    console.log('3');\n}\nfunc = func.before(func1).after(func3);\nfunc();\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br")])])])])]),n._v(" "),a("li",[a("p",[n._v("参考文档："),a("a",{attrs:{href:"https://juejin.im/post/59df4f74f265da430f311909",target:"_blank",rel:"noopener noreferrer"}},[n._v("JavaScript设计模式"),a("OutboundLink")],1)])])])])}),[],!1,null,null,null);s.default=t.exports}}]);