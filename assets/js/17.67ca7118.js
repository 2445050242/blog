(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{518:function(s,n,e){"use strict";e.r(n);var a=e(4),t=Object(a.a)({},(function(){var s=this,n=s.$createElement,e=s._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("ul",[e("li",[e("h2",{attrs:{id:"参考文档"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考文档"}},[s._v("#")]),s._v(" 参考文档")]),s._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://blog.csdn.net/column/details/14957.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("PWA(Progressive Web App)入门系列"),e("OutboundLink")],1)]),s._v(" "),e("li",[e("a",{attrs:{href:"https://segmentfault.com/a/1190000008880637",target:"_blank",rel:"noopener noreferrer"}},[s._v("改造你的网站，变身 PWA"),e("OutboundLink")],1)]),s._v(" "),e("li",[e("a",{attrs:{href:"https://segmentfault.com/a/1190000004653475",target:"_blank",rel:"noopener noreferrer"}},[s._v("Service Worker 学习笔记"),e("OutboundLink")],1)]),s._v(" "),e("li",[e("a",{attrs:{href:"https://discipled.me/posts/service-workers",target:"_blank",rel:"noopener noreferrer"}},[s._v("Service Workers 和离线缓存 "),e("OutboundLink")],1)]),s._v(" "),e("li",[e("a",{attrs:{href:"https://juejin.im/post/59d9b38ef265da064a0f72cc",target:"_blank",rel:"noopener noreferrer"}},[s._v("使用Service Worker发送Push推送"),e("OutboundLink")],1)]),s._v(" "),e("li",[e("a",{attrs:{href:"https://discipled.me/posts/notification-with-sw-push-events",target:"_blank",rel:"noopener noreferrer"}},[s._v("Notification"),e("OutboundLink")],1)]),s._v(" "),e("li",[e("a",{attrs:{href:"https://segmentfault.com/a/1190000008929656",target:"_blank",rel:"noopener noreferrer"}},[s._v("PWA：添加应用至桌面及分享"),e("OutboundLink")],1)]),s._v(" "),e("li",[e("a",{attrs:{href:"https://www.imooc.com/article/details/id/22758",target:"_blank",rel:"noopener noreferrer"}},[s._v("Service Workers: 简介"),e("OutboundLink")],1)]),s._v(" "),e("li",[e("a",{attrs:{href:"https://blog.csdn.net/guojin08/article/details/78950144",target:"_blank",rel:"noopener noreferrer"}},[s._v("Service Workers 初体验"),e("OutboundLink")],1)]),s._v(" "),e("li",[e("a",{attrs:{href:"https://cloud.tencent.com/developer/article/1004663",target:"_blank",rel:"noopener noreferrer"}},[s._v("Service Worker 全面进阶"),e("OutboundLink")],1)]),s._v(" "),e("li",[e("a",{attrs:{href:"https://www.jianshu.com/p/0e2dee4c77bc",target:"_blank",rel:"noopener noreferrer"}},[s._v("构建 Web 应用之 Service Worker 初探"),e("OutboundLink")],1)])])]),s._v(" "),e("li",[e("h2",{attrs:{id:"预览操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#预览操作"}},[s._v("#")]),s._v(" 预览操作")]),s._v(" "),e("p",[s._v("建议安装 "),e("a",{attrs:{href:"https://www.npmjs.com/package/http-server",target:"_blank",rel:"noopener noreferrer"}},[s._v("http-server"),e("OutboundLink")],1),s._v(" 和 "),e("a",{attrs:{href:"https://link.zhihu.com/?target=https%3A//ngrok.com/",target:"_blank",rel:"noopener noreferrer"}},[s._v("ngrok"),e("OutboundLink")],1),s._v(" 以便调试和查看")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("# 执行命令\nhttp-server -c-1 # 注意设置关闭缓存, 这里用参数 -c-1\n# 用另一个终端\nngrok http 8080\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[s._v("注：Demo 当中如果直接启动 http-server 而不使用 -c-1 关闭缓存, sw.js 可能被缓存住, 导致更新方案失败。这种情况下存在 Caches API 和 HTML caching 两层缓存, 需要进行清理才能完成更新。")])]),s._v(" "),e("li",[e("h2",{attrs:{id:"主要涉及知识点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#主要涉及知识点"}},[s._v("#")]),s._v(" 主要涉及知识点")]),s._v(" "),e("ul",[e("li",[e("h3",{attrs:{id:"manifest（应用清单）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#manifest（应用清单）"}},[s._v("#")]),s._v(" Manifest（应用清单）")]),s._v(" "),e("p",[s._v("manifest是一种简单的json数据风格的配置文件，通过对其相应的属性进行配置，才实现相应的功能，这里可以称manifest为WEB应用清单。WEB应用清单可以实现自定义启动画面、打开URL、设置界面颜色、设置桌面图标等等")]),s._v(" "),e("p",[s._v("示例如下：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('//manifest.json\n{\n"name": "这是一个完整名称", //用来描述应用的名称，会显示在各类提示的标题位置和启动画面中\n"short_name": "短名称", //用来描述应用的短名字。当应用的名字过长，在桌面图标上无法全部显示时，会用short_name中定义的来显示\n"start_url": "index.html", //用来描述当用户从设备的主屏幕点击图标进入时，出现的第一个画面\n"scope": {string}, //用来设置manifest对于网站的作用范围\n"icons": [\n    {\n        "src": "144x144.png",\n        "type": "image/png",\n        "sizes": "144x144" //单位为px，如果图标要适配多个尺寸，则第个尺寸间用空格分割，如12x12 24x24 100x100\n    }\n], //用来设置Web App的图标集合\n"background_color": "#2196f3", //用来设置Web App启动画面的背景颜色\n"theme_color": "#f00", //用于显示Web App的主题色，显示在banner位置\n"display": "standalone", //用来指定 Web App 从主屏幕点击启动后的显示类型\n/*\n可选项有：  \n    fullscreen：应用的显示界面将占满整个屏幕；  \n    standalone：浏览器相关UI（如导航栏、工具栏等）将会被隐藏；  \n    minimal-ui：显示形式与standalone类似，浏览器相关UI会最小化为一个按钮，不同浏览器在实现上略有不同；  \n    browser：浏览器模式，与普通网页在浏览器中打开的显示一致\n注：对于不同的显示样式，可以通过CSS的媒体查询进行设置\n*/\n"orientation": {string}, //Web App的在屏幕上的显示方向\n/*\n可选项：\n    landscape-primary，当视窗宽度大于高度时，当前应用处于“横屏”状态\n    landscape-secondary，landscape-primary的180°方向\n    landscape，根据屏幕的方向，自动横屏幕180°切换\n    portrait-primary，当视窗宽度小于高度时，当前应用处于“竖屏”状态\n    portrait-secondary，portrait-primary的180°方向\n    portrait，根据屏幕方向，自动竖屏180°切换\n    natural， 根据不同平台的规则，显示为当前平台的0°方向\n    any，任意方向切换\n*/\n"dir": {string}, //设置文字的显示方向\n/*\n可选项：\n    ltr，文本显示方向，左到右 \n    rtl，文本显示方向，右到左 \n    auto，根据系统的方向显示\n*/\n"related_applications": {Array.<AppInfo>}, //用于定义对应的原生应用，类似应用安装横幅的形式去推广、引流\n/*\n//如安卓可以这么定义:\n//"related_applications": [\n//    {\n//        "platform": "play", 应用平台\n        "id": "com.app.xxx" 应用id\n//    }\n//]\n*/\n"prefer_related_applications":{Boolean} //用于设置只允许用户安装原生应用\n}\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br")])]),e("p",[e("strong",[s._v("参考文档："),e("a",{attrs:{href:"https://blog.csdn.net/lecepin/article/details/78911091",target:"_blank",rel:"noopener noreferrer"}},[s._v("PWA(Progressive Web App)入门系列：（三）PWA关键技术Manifest"),e("OutboundLink")],1)])])]),s._v(" "),e("li",[e("h3",{attrs:{id:"service-workers"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#service-workers"}},[s._v("#")]),s._v(" Service Workers")]),s._v(" "),e("p",[s._v("原生App拥有web应用通常所不具备的离线体验，定时的默默更新，消息通知推送等功能。而新的Service Worker标准让在web app上拥有这些功能成为可能。一个Service Worker是一段运行在浏览器后台进程里的脚本，他独立于当前页面，提供了那些不需要与web页面交互的功能在网页背后悄悄执行的能力。在将来，基于它可以实现消息推送，静静更新以及地理围栏等服务，但是目前它首先要具备的功能是拦截和处理网络请求的功能，包括可编程的消息缓存管理能力。")]),s._v(" "),e("p",[s._v("注意点："),e("br"),s._v("\n1、Service Workers 基于 Https，这是硬性条件"),e("br"),s._v("\n2、每个 Service Worker 都有自己的作用域，它只会处理自己作用域下的请求，而 Service Worker 的存放位置就是它的最大作用域"),e("br"),s._v("\n3、Service Workder 是 Web Worker 的一种，它不能够直接操作 DOM")]),s._v(" "),e("ul",[e("li",[e("h4",{attrs:{id:"install-事件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#install-事件"}},[s._v("#")]),s._v(" Install 事件")]),s._v(" "),e("p",[s._v("在监听install事件中主要做的就是缓存文件和安装")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("// server-worker.js\nconst\n  version = '1.0.0',  //版本号\n  CACHE = version + '::PWAsite',  //缓存名\n  offlineURL = '/offline/',  //离线文件夹\n  installFilesEssential = [   //缓存文件数组\n    \"/\",\n    \"index.html\",\n    \"css/main.css\",\n    '/js/offlinepage.js',\n    \"apple-touch-icon.png\"\n  ]\n  // .concat(offlineURL)\n  ,\n  installFilesDesirable = [\n    // '/favicon.ico',\n  ];\n//installStaticFiles()方法添加文件到缓存\n// install static assets\nfunction installStaticFiles() {\n    return caches.open(CACHE)\n    .then(cache => {\n    // cache desirable files\n    cache.addAll(installFilesDesirable);\n    // cache essential files\n    return cache.addAll(installFilesEssential);\n    });\n}\n//添加install的事件监听函数\nself.addEventListener('install', e => {\n    console.log('service worker: install');\n    //waitUntil方法确保所有代码执行完毕后，service worker 才会执行 install\n    e.waitUntil(\n        installStaticFiles()\n        .then(() => self.skipWaiting())// 调用 self.skipWaiting() 方法是为了在页面更新的过程当中, 新的 Service Worker 脚本能立即激活和生效。\n   );\n});\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br")])])]),s._v(" "),e("li",[e("h4",{attrs:{id:"activate-事件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#activate-事件"}},[s._v("#")]),s._v(" Activate 事件")]),s._v(" "),e("p",[s._v("在fetch事件中检测服务和缓存是否更新")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("// server-worker.js\n// clear old caches\nfunction clearOldCaches() {\n     //获取所有cache名称\n    return caches.keys()\n      .then(keylist => {\n        return Promise.all(\n          keylist\n            .filter(key => key !== CACHE)\n            .map(key => caches.delete(key))\n        );\n    });\n}\n// application activated\n// 缓存的资源随着版本的更新会过期, 所以会根据缓存的字符串名称清除旧缓存,   可以遍历所有的缓存名称逐一判断决决定是否清除\nself.addEventListener('activate', event => {\n    console.log('service worker: activate');\n      // delete old caches\n    event.waitUntil(\n      clearOldCaches()\n      .then(() => self.clients.claim()) // 在新安装的 Service Worker   中通过调用 self.clients.claim() 取得页面的控制权,   这样之后打开页面都会使用版本更新的缓存。旧的 Service Worker   脚本不再控制着页面之后会被停止\n      );\n});\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br")])])]),s._v(" "),e("li",[e("h4",{attrs:{id:"fetch-事件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fetch-事件"}},[s._v("#")]),s._v(" Fetch 事件")]),s._v(" "),e("p",[s._v("fetch事件为监听网络请求，主要做的是监听网络请求的文件是否在缓存中，再决定以什么形式返回请求文件")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("// server-worker.js\n//当有网络请求时这个事件被触发。它调用respondWith()方法来劫持 GET 请求并返回\nself.addEventListener('fetch', event => {\n    // abandon non-GET requests\n    if (event.request.method !== 'GET') return;\n    let url = event.request.url;\n    event.respondWith(\n      caches.open(CACHE)\n        .then(cache => {\n          return cache.match(event.request)\n            .then(response => {\n            // 如果请求文件在缓存文件中，则从缓存中返回文件\n              if (response) {\n                // return cached file\n                console.log('cache fetch: ' + url);\n                return response;\n              }  \n              // make network request\n              // 否则从正常网络中请求\n              return fetch(event.request)\n                .then(newreq => {\n                  //如果请求成功则将其存入缓存\n                  console.log('network fetch: ' + url);\n                  if (newreq.ok) cache.put(event.request,\n                  //要先复制一份response，原因是request或者response对象属于stream，只能使用一次，之后一份存入缓存，另一份发送个页面。\n                  newreq.clone());\n                  return newreq; \n                })\n                // app is offline\n                .catch(() => offlineAsset(url));  \n            });  \n        })  \n    );\n});\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br")])])]),s._v(" "),e("li",[e("h4",{attrs:{id:"message-事件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#message-事件"}},[s._v("#")]),s._v(" Message 事件")]),s._v(" "),e("p",[s._v("message事件监听页面发送过来的信息,service worker 与主窗口通也需要通过 postMessage。postMessage 方法并不在 worker 实例下，而是在 serviceWorker 下的 controller 对象下。")]),s._v(" "),e("p",[e("strong",[s._v("页面发送信息和接收信息")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("//index.html\n//    判断是否支持sw\nif (navigator.serviceWorker != null) {\n    // 页面发送信息事件\n    // const sendMessageToSW = msg =>  navigator.serviceWorker.controller &&  navigator.serviceWorker.controller.postMessage(msg);\n    const sendMessageToSW = msg => new Promise((resolve, reject) => {\n        //创建通道\n        const messageChannel = new MessageChannel();\n        //接收信息\n        messageChannel.port1.onmessage = event => {\n            console.log('main thread receive message...');\n            if (event.data.error) {\n                reject(event.data.error);\n            } else {\n                resolve(event.data);\n\n            }\n        };\n        // 向sw发送信息\n        navigator.serviceWorker.controller &&  navigator.serviceWorker.controller.postMessage(msg,  [messageChannel.port2]);\n    });\n    navigator.serviceWorker.register('service-worker.js')\n    .then(function (registration) {\n        console.log(\"Registered events st scope: \",  registration.scope);\n    })            \n    .catch(() => console.error('Load service worker fail'))\n    //  页面给server-worker发送消息\n    .then(() => sendMessageToSW('Hello, service worker.'))\n    // 打印sw发送过来的信息\n    .then((data) => console.log(data))\n    .catch(() => console.error('Send message error.'));\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br")])]),e("p",[e("strong",[s._v("sw发送信息和接受信息")])]),s._v(" "),e("p",[s._v("在sw里需要传递MessagePort，这个是由MessageChannel生成的通信的两端，在己方的一端为channel.port1，使用channel.port1.onmessage即可监听从另一端返回的信息。而需要在postMessage里传的是channel.port2，给另一端postMessage使用。在sw端通过监听message事件就可以监听到主线程的postMessage，在message的event.ports[0]里即可找到主线程传过来的port，之后就可以用event.ports[0].postMessage来向主线程发送信息了")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("// server-worker.js\n//  监听message事件来获取页面发送过来的信息\nself.addEventListener('message', function(event) {\n  console.log('sw receive message..');\n  // 接收页面发送过来的信息\n  console.log(event.data);\n  // 向主线程发送信息\n  event.ports[0].postMessage('Hi, hello too');\n});\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])])]),s._v(" "),e("li",[e("h4",{attrs:{id:"为应用添加离线缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#为应用添加离线缓存"}},[s._v("#")]),s._v(" 为应用添加离线缓存")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("// service-worker.js\nconst HOST_NAME = location.host;\nconst VERSION_NAME = 'CACHE-v1';\nconst CACHE_NAME = HOST_NAME + '-' + VERSION_NAME;\nconst CACHE_HOST = [HOST_NAME, 'cdn.bootcss.com'];\n\nconst isNeedCache = function(url) {\n    return CACHE_HOST.some(function(host) {\n        return url.search(host) !== -1;\n    });\n};\n\nconst isCORSRequest = function(url, host) {\n    return url.search(host) === -1;\n};\n\nconst isValidResponse = function(response) {\n    return response && response.status >= 200 && response.status < 400;\n};\n\nconst handleFetchRequest = function(req) {\n    if (isNeedCache(req.url)) {\n        const request = isCORSRequest(req.url, HOST_NAME) ? new   Request(req.url, {mode: 'cors'}) : req;\n        return caches.match(request)\n            .then(function(response) {\n                // Cache hit - return response directly\n                if (response) {\n                    // Update Cache for next time enter\n                    fetch(request)\n                        .then(function(response) {\n                            // Check a valid response\n                            if(isValidResponse(response)) {\n                                caches\n                                    .open(CACHE_NAME)\n                                    .then(function (cache) {\n                                        cache.put(request, response);\n                                    });\n                            } else {\n                                sentMessage('Update cache ' + request.url + ' fail: ' + response.message);\n                            }\n                        })\n                        .catch(function(err) {\n                            sentMessage('Update cache ' + request.url + ' fail: ' + err.message);\n                        });\n                    return response;\n                }\n                // Return fetch response\n                return fetch(request)\n                    .then(function(response) {\n                        // Check if we received an unvalid response\n                        if(!isValidResponse(response)) {\n                            return response;\n                        }\n                        const clonedResponse = response.clone();\n                        caches\n                            .open(CACHE_NAME)\n                            .then(function(cache) {\n                                cache.put(request, clonedResponse);\n                            });\n                        return response;\n                    });\n            });\n    } else {\n        return fetch(req);\n    }\n};\nconst onFetch = function(event) {\n    event.respondWith(handleFetchRequest(event.request));\n};\nself.addEventListener('fetch', onFetch);\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br"),e("span",{staticClass:"line-number"},[s._v("64")]),e("br"),e("span",{staticClass:"line-number"},[s._v("65")]),e("br"),e("span",{staticClass:"line-number"},[s._v("66")]),e("br"),e("span",{staticClass:"line-number"},[s._v("67")]),e("br"),e("span",{staticClass:"line-number"},[s._v("68")]),e("br"),e("span",{staticClass:"line-number"},[s._v("69")]),e("br"),e("span",{staticClass:"line-number"},[s._v("70")]),e("br")])]),e("p",[e("strong",[s._v("参考文档："),e("a",{attrs:{href:"https://segmentfault.com/a/1190000004653475",target:"_blank",rel:"noopener noreferrer"}},[s._v("Service Worker 学习笔记"),e("OutboundLink")],1)])])])])]),s._v(" "),e("li",[e("h3",{attrs:{id:"push-notification（推送通知）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#push-notification（推送通知）"}},[s._v("#")]),s._v(" Push Notification（推送通知）")]),s._v(" "),e("ul",[e("li",[e("h4",{attrs:{id:"常用api"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常用api"}},[s._v("#")]),s._v(" 常用api")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("ServiceWorkerRegistration.showNotification(title, options) 这个可以理解成alert的升级版，网页版的wechat的通知就是这个。  \n\nNotification.requestPermission() 提示用户是否允许浏览器通知\n\nPushManager Push API的核心对象，注册Push API从这里开始，放在 ServiceWorkerRegistration里\n\n  PushManager.subscribe 返回一个带有PushSubscription的Promise，通过PushSubscription对象才能生成公钥（PushSubscription.getKey()，这个方法只有firefox有，这也是chrome不能执行的原因），获取endpoint\n\n  PushManager.getSubscription() 获取当前注册好的PushSubscription对象\n\natob()和btob() 意外捡到两个API，用于浏览器编码、解码base64\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[e("strong",[s._v("举个栗子：")]),s._v("  (这块代码还没实践过，暂时先放置在这，可以先接着从下面的push实践开始看)")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("// 浏览器端的main.js, 代码来自push-api-demo\nnavigator.serviceWorker.ready.then(function(reg) {\n    // 注册push\n    reg.pushManager.subscribe({userVisibleOnly: true})\n       // 得到PushSubscription对象\n      .then(function(subscription) {\n        // The subscription was successful\n        isPushEnabled = true;\n        subBtn.textContent = 'Unsubscribe from Push Messaging';\n        subBtn.disabled = false;\n        \n        // Update status to subscribe current user on server, and  to let\n        // other users know this user has subscribed\n        var endpoint = subscription.endpoint;\n        // 生成公钥\n        var key = subscription.getKey('p256dh');\n        //  这一步是个ajax，把公钥和endpoint传给server，因为是https所  不怕公钥泄露\n        updateStatus(endpoint,key,'subscribe');\n      })\n});\n    \n// 服务端 server.js，接收并存下公钥、endpoint\n...\n} else if(obj.statusType === 'subscribe') {\n// bodyArray里是ajax传上来的key和endpoint\n    fs.appendFile('endpoint.txt', bodyArray + '\\n', function (err) {\n      if (err) throw err;\n      fs.readFile(\"endpoint.txt\", function (err, buffer) {\n        var string = buffer.toString();\n        var array = string.split('\\n');\n        for(i = 0; i < (array.length-1); i++) {\n          var subscriber = array[i].split(',');\n          webPush.sendNotification(subscriber[2], 200, obj.keyJSON.stringify({\n            action: 'subscribe',\n            name: subscriber[1]\n          }));\n        };\n      });\n    });\n  }\n  ...\n  \n  // 还是服务端 server.js，推送信息到service worker\n  if(obj.statusType === 'chatMsg') {\n      // 取出客户端传来的公钥和endpoint\n    fs.readFile(\"endpoint.txt\", function (err, buffer) {\n      var string = buffer.toString();\n      var array = string.split('\\n');\n      for(i = 0; i < (array.length-1); i++) {\n        var subscriber = array[i].split(',');\n     // 这里用了web-push这个node的库，sendNotification里有key，说明息加密了\n        webPush.sendNotification(subscriber[2], 200, obj.keyJSON.stringify({\n          action: 'chatMsg',\n          name: obj.name,\n          msg: obj.msg\n        }));\n      };\n    });\n  }\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br")])])]),s._v(" "),e("li",[e("h4",{attrs:{id:"client端"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#client端"}},[s._v("#")]),s._v(" Client端")]),s._v(" "),e("p",[s._v("1、进入页面后先注册ServiceWorker，然后subscribe PushManager，把公钥和endpoint传给Server端（ajax）保存下来，便于之后的通信（都是加密的）")]),s._v(" "),e("p",[s._v("2、然后创建一个MessageChannel与ServiceWorker通信")]),s._v(" "),e("p",[s._v("准备工作到这里就做完了。Client与Server端的通信还是ajax，聊天室嘛就是传用户发送的消息。ServiceWorker去监听push事件接住Server端push来的数据，在这个demo里都是Server端接到Client的ajax请求的响应，当然也可以又Server端主动发起一个push。当同时有两个以上的Client都与这个Server通信，那么这几个Client能看到所有与Server的消息，这才是聊天室嘛，不过要验证至少需要两台机器")])]),s._v(" "),e("li",[e("h4",{attrs:{id:"server端"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#server端"}},[s._v("#")]),s._v(" Server端")]),s._v(" "),e("p",[s._v("一个HTTPS服务，加了Web-Push这个module，这里面肯定有用公钥和endpoint给push信息加密的功能。webPush.sendNotification这个API能把Server端的push消息广播到所有的Client端")])]),s._v(" "),e("li",[e("h4",{attrs:{id:"push-事件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#push-事件"}},[s._v("#")]),s._v(" Push 事件")]),s._v(" "),e("p",[s._v("监听 Service workers 中的 push 事件，就能获取来自推送服务器的消息，再通过 registration.showNotification 方法就能发出 Notification 了")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("// service-worker.js\n//这里演示的是服务端给客户端推送消息\nconst onPush = function(event) {\n    event.waitUntil(self.registration.showNotification('New Post Arrival',   {\n        icon: '/logo.png'\n    }));\n};\nself.addEventListener('push', onPush);\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[s._v("现在就可以打开 firefox 试一试了，打开 service workers 调试页，点击推送就可以预览效果了")])]),s._v(" "),e("li",[e("h4",{attrs:{id:"notification"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#notification"}},[s._v("#")]),s._v(" Notification")]),s._v(" "),e("p",[s._v("这里演示的是直接用推送功能给浏览器推送消息")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("//推送功能的实现\nconst NOTIFICATION_API = 'Notification';\nconst PERMISSION_GRANTED = 'granted';\nconst NOTIFICATION_START_TIME = 23;\nconst NOTIFICATION_END_TIME = 6;\nconst DELAY_MINUTES = 0.1;\nconst NOTIFICATION = {\n    title: '夜深了',\n    delay: DELAY_MINUTES * 60 * 1000, // 5 minutes\n    options: {\n        body: '亲，工作之余，也要注意身体噢...',\n        icon: '/favicon.ico'\n    }\n};\n\n//判断是否支持通知功能\nconst isSupportNotification = () => NOTIFICATION_API in window;\n//获取对显示通知的状态\nconst getPermission = () => Notification.permission;\n//是否允许显示通知\nconst isPermissionGranted = permission => permission ===   PERMISSION_GRANTED;\n\nconst registerNotification = () => {\n    const now = new Date();\n    const nowHour = now.getHours();\n    // Time in the notification time block\n    //判断当前时间是否在规定时间内\n    if (nowHour <= NOTIFICATION_END_TIME || nowHour >=   NOTIFICATION_START_TIME) {\n        setTimeout(() => new Notification(NOTIFICATION.title,   NOTIFICATION.options), NOTIFICATION.delay);\n    } else {\n        // Show notification at 11 o'clock.\n        // const start = new Date(now.getFullYear(), now.getMonth(),   now.getDate(), NOTIFICATION_START_TIME, DELAY_MINUTES);\n        // setTimeout(() => new Notification(NOTIFICATION.title,   NOTIFICATION.options), start.valueOf() - now.valueOf());\n        setTimeout(() => new Notification(NOTIFICATION.title,   NOTIFICATION.options), NOTIFICATION.delay);\n    }\n};\n//判断是否支持通知\nif (isSupportNotification()) {\n  // 判断当前是否允许显示通知\n    if (isPermissionGranted(getPermission())) {\n      // 发送通知\n        registerNotification();\n    } else {\n      // 显示“是否显示通知”弹窗给用户选择\n        Notification\n            .requestPermission()\n            .then(isPermissionGranted)\n            .then(granted => granted && registerNotification());\n    }\n} else {\n    console.info('Browser not support Notification.');\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br")])]),e("p",[s._v("在 service workers 中可以监听 notification 的 click 事件，再通过 clients 操作，就能达到一些诸如打开一个新页面等类似的效果（这里还未实现）")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const onNotificationClick = function(event) {\n  event.notification.close();\n  event.waitUntil(clients.openWindow(event.notification.data));\n};\nself.addEventListener('notificationclick', onNotificationClick);\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("注：以下推送消息部分代码是比较合理的，可以依据代码自行测试")])]),s._v(" "),e("p",[s._v("在注册 service worker 时，先通过 pushManager.getSubscription 方法获取当前客户端是否已经订阅过了，没有订阅则通过 pushManager.subsribe 方法来获取一个订阅；接着就将订阅信息发送给后端，交由后端储存起来")]),s._v(" "),e("p",[e("strong",[s._v("获取客户端订阅信息，并传到服务端存储示例")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("//index.html\n//    判断是否支持sw\nif (navigator.serviceWorker != null) {\n    navigator.serviceWorker.register('service-worker.js')\n    .catch(() => console.error('Load service worker fail'))\n    // 判断用户是否允许推送功能\n    .then(function (registration) {\n        console.log(\"Registered events st scope: \", registration.scope);\n        //先通过 pushManager.getSubscription   方法获取当前客户端是否已经订阅过了\n        //没有订阅则通过 pushManager.subsribe 方法来获取一个订阅\n        if (window.PushManager) {\n            registration.pushManager.getSubscription().then(subscription =>   {\n                // 如果用户没有订阅\n                if (!subscription) {\n                    subscribeUser(registration);\n                } else {\n                    console.log(\"You have subscribed our notification\");\n                }       \n            });     \n        }\n    })  \n    .catch(error => console.error('Subscribe Failure: ', error.message));\n}\n// 用户订阅\nfunction subscribeUser(swRegistration) {\n    const applicationServerPublicKey =   \"BLcNXy4biJlmVrB_j-uTRITYDz1GrbPm-y35WkBPWM_I4HQ1c7AXFWH0X0TTikRkPyspff  X-Uj3zeGgl-A9xzlo\";\n    const applicationServerKey =   urlBase64ToUint8Array(applicationServerPublicKey);\n    // subscribe传两个参数，一个是userVisibleOnly，这个表示消息是否必须要可  见，如果设置为不可见，Chrome将会报错，第二个参数applicationServerKey是  服务端的公钥，这个可以用web push的Node包生成\n    swRegistration.pushManager.subscribe({\n        userVisibleOnly: true,\n        applicationServerKey: applicationServerKey\n    })\n    // 用户同意\n    .then(function(subscription) {\n        console.log('User is subscribed:', JSON.stringify(subscription));\n        //这一段是将订阅信息发送至服务端示例\n        // jQuery.post(\"/add-subscription.php\", {subscription:   JSON.stringify(subscription)}, function(result) {\n        //     console.log(result);\n        // });\n    })\n    // 用户不同意或者生成失败\n    .catch(function(err) {\n        console.log('Failed to subscribe the user: ', err);\n    });\n}\nfunction urlBase64ToUint8Array(base64String) {\n    const padding = '='.repeat((4 - base64String.length % 4) % 4);\n    const base64 = (base64String + padding)\n        .replace(/\\-/g, '+')\n        .replace(/_/g, '/');\n    const rawData = window.atob(base64);\n    const outputArray = new Uint8Array(rawData.length);\n    for (let i = 0; i < rawData.length; ++i) {\n        outputArray[i] = rawData.charCodeAt(i);\n    }\n    return outputArray;\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br")])]),e("p",[e("strong",[s._v("服务端带上密钥推送消息给SW示例")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('//服务端代码\nconst webpush = require(\'web-push\');\n// 从数据库取出用户的subsciption\n// 这里的数据就是之前客户端获取到的订阅信息传到服务端存储\nconst pushSubscription =   {"endpoint":"https://fcm.googleapis.com/fcm/send/ci3-kIulf9A:APA91bEaQfDU8z  uLSKpjzLfQ8121pNf3Rq7pjomSu4Vg-nMwLGfJSvkOUsJNCyYCOTZgmHDTu9I1xvI-dMVLZm1Eg  mEH0vDA7QFLjPKShG86W2zwX0IbtBPHEDLO0WgQ8OIhZ6yTnu-S","expirationTime":null,  "keys":{"p256dh":"BAdAo6ldzRT5oCN8stqYRemoihPGOEJjrUDL6y8zhdA_swao_q-HlY_69  mzIVobWX2MH02TzmtRWj_VeWUFMnXQ=","auth":"SS1PBnGwfMXjpJEfnoUIeQ=="}};\n// push的数据\nconst payload = {\n    title: \'一篇新的文章\',\n    body: \'点开看看吧\',\n    icon: \'/html/app-manifest/logo_512.png\',\n    data: {url: "https://fed.renren.com"}\n//badge: \'/html/app-manifest/logo_512.png\'\n};\n// 利用sendNotification方法推送消息\nwebpush.sendNotification(pushSubscription, JSON.stringify(payload));\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br")])]),e("p",[e("strong",[s._v("SW接收服务端推送消息后再通知到客户端示例")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("//server-eorker.js\n// 监听push事件获取推送消息\nthis.addEventListener('push', function(event) {\n    console.log('[Service Worker] Push Received.');\n    console.log(`[Service Worker] Push had this data:   \"${event.data.text()}\"`);\n    let notificationData = event.data.json();\n    const title = notificationData.title;\n    // 可以发个消息通知页面\n    //util.postMessage(notificationData); \n    // 弹消息框\n    event.waitUntil(self.registration.showNotification(title,   notificationData));\n});\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[e("strong",[s._v("推送消息点击事件示例")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("//server-eorker.js\n//监听notificationclick事件\nthis.addEventListener('notificationclick', function(event) {\n    console.log('[Service Worker] Notification click Received.');\n    \n    let notification = event.notification;\n    // 关闭通知弹窗\n    notification.close();\n    event.waitUntil(\n         //  打开新的窗口\n        clients.openWindow(notification.data.url)\n    );\n});\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])]),e("p",[e("strong",[s._v("至此完整的推送功能就已经实现了，这里可能刚开始看会比较模糊，后面我再补充一个流程图列举一下各个方面的联系。至于以下的谷歌配置，目前还不是很熟悉，至少在 Firefox上是已经可以取到订阅信息了")])]),s._v(" "),e("p",[s._v("现在这套代码在 chrome 下无法成功订阅，如果想要 chrome 支持，那么还得用上古哥服务。")]),s._v(" "),e("p",[s._v("想要 chrome 下 service workers 能够发出 Notification 并不复杂，只需以下几步：")]),s._v(" "),e("p",[s._v("1、由于，GCM 已经被 FCM(Firebase Cloud Messaging) 替代，所以，先要先开通 firebase")]),s._v(" "),e("p",[s._v("2、创建一个项目")]),s._v(" "),e("p",[s._v("3、查看 setting（⚙）中的 cloud messaging 信息(Server key 和 Sender ID)")]),s._v(" "),e("p",[s._v("4、客户端根目录下添加 manifest.json，并设置 gcm_sender_id 和 applicationServerKey，分别对应项目的Sender ID 和 Server key")]),s._v(" "),e("p",[s._v("5、服务器端，在使用 web-push 调用 sendNotification API 时添加 gcmAPIKey（填 Server key）")])])])])])]),s._v(" "),e("li",[e("h2",{attrs:{id:"踩坑点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#踩坑点"}},[s._v("#")]),s._v(" 踩坑点")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("Manifest.json用于指定存到桌面的icon的配置大小应该和图片实际大小一致，否则会出现安装失败")])]),s._v(" "),e("li",[e("p",[s._v("建议在编写测试代码的时候在开发者工具中Application->Service Workers中勾选Update on reload(在加载中更新)，这样的话就不用每次都清缓存，刷新即可获取最新代码")])]),s._v(" "),e("li",[e("p",[s._v("PushManager.subscribe 返回一个带有PushSubscription的Promise，通过PushSubscription对象才能生成公钥（PushSubscription.getKey()，这个方法只有firefox有，这也是chrome不能执行的原因）,所以一般采用firefox测试推送api，不然就需要配置谷歌服务（上面有相应的配置步骤）")])])])])])])}),[],!1,null,null,null);n.default=t.exports}}]);